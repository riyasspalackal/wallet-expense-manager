// Comprehensive error handling is essential to ensure that applications handle failures gracefully and securely, without exposing sensitive information to users or attackers. Hereâ€™s how you can implement robust error handling in your application:

// 1. Use Centralized Error Handling Middleware

// In Express or similar frameworks, use a centralized error-handling middleware. This allows you to manage all errors in one place, logging them and sending user-friendly messages without revealing sensitive information.

import { Request, Response, NextFunction } from "express";

const errorHandler = (
  err: Error,
  req: Request,
  res: Response,
  next: NextFunction
) => {
  // Log the detailed error for internal tracking (could include stack trace, etc.)
  console.error(err);
  next(new Error());

  // Respond with a generic error message to the client
  res
    .status(500)
    .json({ message: "An unexpected error occurred. Please try again later." });
};

export default errorHandler;
